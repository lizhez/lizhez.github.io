<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-06-11T23:20:22+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Zhe Li | East China Normal University</title><subtitle>Artificial Intelligence trends and concepts made easy.</subtitle><author><name>Zhe Li (李哲)</name></author><entry><title type="html">TSFM-Bench: A Comprehensive and Unified Benchmark of Foundation Models for Time Series Forecasting</title><link href="http://localhost:4000/TSFM.html" rel="alternate" type="text/html" title="TSFM-Bench: A Comprehensive and Unified Benchmark of Foundation Models for Time Series Forecasting" /><published>2025-06-08T00:00:00+08:00</published><updated>2025-06-08T00:00:00+08:00</updated><id>http://localhost:4000/TSFM</id><content type="html" xml:base="http://localhost:4000/TSFM.html"><![CDATA[<p>本文旨在介绍一项关于时间序列预测基础模型的benchmark研究。为了在多领域、多特征数据集上对多种时间序列预测基础模型进行全面统一的测评，华东师范大学联合丹麦奥尔堡大学开发了<strong>FoundTS</strong>，这一框架专门用于时间序列预测基础模型的系统测评。论文基于统一的评测结果，分析了现有时间序列预测基础模型的优势与不足，并提出了切实可行的改进方向，以推动基础模型性能的进一步提升。</p>
<div align="center">
<img src="assets/img/posts/TSFM/title.png" width="90%" />
</div>

<p><strong>论文地址</strong>： <a href="http://arxiv.org/abs/2410.11802">http://arxiv.org/abs/2410.11802</a></p>

<p>时间序列预测（Time Series Forecasting, TSF）是指利用历史观测数据来预测数据未来数据趋势，对于金融分析、气象预测、能源管理等多个领域具有至关重要的作用。</p>

<h3 id="背景">背景</h3>

<p>近年来，专门针对特定领域数据集进行训练的模型（Specific models）在预测精度和推理速度上取得了显著提升。然而，当这些模型遇到新的领域或数据时，其泛化能力往往受到限制，表现并不理想。与此相比，在多领域时间序列数据或大规模语言数据集上进行预训练的基础模型（Foundation models）为提高时间序列预测模型的泛化能力提供了新的研究路径，但对这类模型的理解和研究目前仍显不足，主要原因有以下三点：</p>
<ol>
  <li>现有时间序列预测基础模型的实验设置缺乏一致性，如表1所示，这导致基于当前结果很难对不同基础模型的性能进行公正且一致的比较；</li>
  <li>当前主流的时间序列预测的测评基准主要集中在特定模型上，很少关注基础模型；</li>
  <li>现有的涉及基础模型的测试基准多停留在定性分析或单一场景的评估上，缺乏对模型在不同场景下性能的综合定量分析。</li>
</ol>
<div align="center">
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">表 1：不同时间序列预测基础模型实验设置比较。</center>
<img src="assets/img/posts/TSFM/sample_setting.png" width="65%" />
</div>

<p>为了应对上述挑战，这篇论文提出了一个新的测评基准——FoundTS，旨在为时间序列预测基础模型提供一个全面统一的测评平台。通过FoundTS，能够对不同模型在多领域、多特征数据集上的性能进行系统性的分析，从而为时间序列预测领域的研究和实践提供更加可靠的参考。</p>
<div align="center">
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">表 2：FoundTS 与其他时间序列预测基准的比较。</center>
<img src="assets/img/posts/TSFM/pipe.png" width="85%" />
</div>

<h3 id="foundts-测评框架">FoundTS 测评框架</h3>

<p>FoundTS 提供了一个标准化的评估流程，包括数据（data）、模型（models）和评估（evaluation）三个核心模块，如图1所示。</p>

<div align="center">
<img src="assets/img/posts/TSFM/architecture.png" width="100%" />
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图 1：FoundTS 架构。</center>
</div>

<ol>
  <li>数据模块涵盖了来自10个不同领域的时间序列数据集（Stock, Health, Energy, Electricity, Environment, Traffic, Nature, Banking, Web, Economics），这些数据集具有多种特征（Seasonality, Trend, Stationarity, Transition, Shifting, Correlation, Non-Gaussianity），为时间序列预测提供了全面的数据支持。</li>
  <li>模型模块将多个具有不同架构类型的时间序列预测模型分为三类：
    <ul>
      <li><strong>基于多领域时间序列数据的预训练模型</strong>，论文从重建、自回归、直接预测和混合预测四个角度介绍了这些模型；</li>
      <li><strong>基于大规模语言模型的预训练模型</strong>，通过参数高效的微调策略或精心设计的prompt，充分利用LLMs强大的表征能力和序列建模能力，捕捉时间序列数据中的复杂模式。</li>
      <li><strong>特定模型</strong>，这些模型在特定数据集上进行训练和推理，包括于CNN的模型、基于Transformer的模型、基于MLP的模型等。</li>
    </ul>
  </li>
  <li>评估模块提供了一个全面的测评场景、可扩展的流程和统一的评估环境：
    <ul>
      <li>包含zero-shot、few-shot 和 full-shot的测评场景，全面探索了时间序列预测基础模型在不同测试场景下的性能。</li>
      <li>支持灵活的选择回看窗口、预测窗口、数据划分与加载、采样策略，一致的实验设置更能确保测试结果的公平性和可靠性。</li>
      <li>提供多种评估指标，如平均绝对误差（MAE）和均方误差（MSE）等，可以从不同角度对时间序列预测基础模型进行详尽剖析。</li>
    </ul>
  </li>
</ol>

<h3 id="实验">实验</h3>

<h4 id="实验结果">实验结果</h4>
<p>论文在多个不同领域的数据集上对比了不同的时间序列预测基础模型以及端到端的特定模型在 zero-shot、few-shot 和 full-shot 场景下的性能表现。</p>
<div align="center">
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">表 3：zero-shot 设置下的实验结果。</center>
<img src="assets/img/posts/TSFM/zero.png" width="100%" />
</div>

<div align="center">
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">表 4：采用 5% 数据对基础模型进行微调的 few-shot 设置下的实验结果。</center>
<img src="assets/img/posts/TSFM/few.png" width="100%" />
</div>

<div align="center">
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">表 5：full-shot  设置下的实验结果。</center>
<img src="assets/img/posts/TSFM/full.png" width="65%" />
</div>

<h4 id="模型分析">模型分析</h4>
<ul>
  <li>论文对不同数据采样策略在时间序列预测基础模型中的效果进行了比较分析。结果表明，在few-shot场景中，数据采样策略的选择对模型性能有着显著影响。因此，只有在统一的实验设置下，才能对不同模型的性能进行公平和准确的评估。</li>
</ul>

<div align="center">
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">表 6：不同采样策略。</center><img src="assets/img/posts/TSFM/sample_strategy.png" width="55%" />
</div>

<ul>
  <li>论文探讨了多变量时序数据的通道依赖性对时间序列预测基础模型性能的影响，并建议未来在开发和构建时间序列预测基础模型时，应充分考虑并利用多变量数据之间的通道依赖关系。</li>
</ul>

<div align="center">
<img src="assets/img/posts/TSFM/correlation.png" width="55%" />
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图 2：按数据集多通道依赖性强弱排序的模型在 5% 数据的 few-shot 场景下的性能比较。</center>
</div>

<ul>
  <li>论文分析了不同框架下的时间序列预测基础模型之间的性能差异，指出未来研究需要进一步探索模型架构设计，以寻求在模型性能和参数规模之间达到最佳平衡点。</li>
</ul>

<div align="center">
<img src="assets/img/posts/TSFM/size_of_dataset.png" width="55%" />
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图 3：不同时间序列预测基础模型的参数量和预训练数据集大小下的模型 zero-shot 性能比较。</center>
</div>

<ul>
  <li>论文在一系列具有不同显著特征的数据集上，对时间序列预测基础模型处理多样化特征数据的能力进行了比较分析。</li>
</ul>

<div align="center">
<img src="assets/img/posts/TSFM/characteristic.png" width="55%" />
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图 4：七个具有不同数据特征数据集上时间序列预测基础模型在 5% 数据的 few-shot 场景下性能比较。</center>
</div>

<ul>
  <li>论文对来自多领域时间序列数据或大规模语言数据的预训练知识对下游时间序列预测任务的实际效益进行了评估。</li>
</ul>

<div align="center">
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">表 6：加载预训练参数（“p”）和随机初始化（“w/o p”）的时间序列预测基础模型在 5% 数据的 few-shot 场景下性能比较。</center>
<img src="assets/img/posts/TSFM/parameter.png" width="55%" />
</div>

<ul>
  <li>论文通过衡量时间序列预测基础模型在5%数据的few-shot场景下的微调时间与特定模型在full-shot场景下从头训练的时间，探讨了时间序列预测基础模型在效率和预测准确性方面的表现。</li>
</ul>

<div align="center">
<img src="assets/img/posts/TSFM/size_of_parameter.png" width="55%" />
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图5：模型效率。圆圈的大小代表模型参数的大小。</center>
</div>

<h3 id="发现与观点">发现与观点</h3>

<p>该论文从多个维度对时间序列预测基础模型进行了深入分析，并提出了关键发现和对未来研究方向的建议：</p>

<ul>
  <li>
    <p><strong>基础模型是否优于特定模型？</strong></p>

    <p>时间序列预测基础模型在zero-shot和full-shot场景下展现出了较强的学习能力，但在拥有充足训练数据的情况下，基础模型并不总是优于特定模型。</p>
  </li>
  <li>
    <p><strong>哪些基础模型表现更亮眼？</strong></p>

    <p>在评估基础模型的优越性时，需要考虑多个不同的维度。目前，没有任何一个单一的基础模型能够在所有方面都占据绝对优势。</p>
  </li>
  <li>
    <p><strong>未来应从哪些角度提升基础模型性能？</strong></p>

    <ul>
      <li>增强模型的通用性，使其能够适应多种不同的预测场景；</li>
      <li>从训练数据、模型架构、预训练策略等多个角度进行优化，以更有效地利用大规模预训练数据；</li>
      <li>在下游任务甚至预训练阶段，充分建模不同通道之间的依赖性，这对于处理多变量时间序列数据至关重要；</li>
      <li>在实际应用中，需要合理平衡预测精度与训练、微调、推理的成本，这是将时间序列预测基础模型投入实际应用时不可忽视的问题。</li>
    </ul>
  </li>
</ul>]]></content><author><name>李哲, 邱翔飞，陈鹏，王益航，成涵吟，树扬，胡吉林，郭晨娟，周傲英，Christian S. Jensen，杨彬</name></author><category term="opinion" /><category term="Benchmark" /><category term="Time Series Forecasting" /><category term="Foundation Models" /><summary type="html"><![CDATA[关于时间序列预测基础模型的benchmark研究]]></summary></entry><entry><title type="html">Ocean Significant Wave Height Estimation with Spatio-temporally Aware Large Language Models</title><link href="http://localhost:4000/Ocra.html" rel="alternate" type="text/html" title="Ocean Significant Wave Height Estimation with Spatio-temporally Aware Large Language Models" /><published>2024-08-01T00:00:00+08:00</published><updated>2024-08-01T00:00:00+08:00</updated><id>http://localhost:4000/Ocra</id><content type="html" xml:base="http://localhost:4000/Ocra.html"><![CDATA[<p>本文介绍决策智能实验室和河口海岸国重合作的AI4Ocean的工作——海洋有效波高估计。</p>

<!-- 图片：论文的标题+作者截个图（类似下面这个截图 - 要用CMR后的）
![外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传](https://img-home.csdnimg.cn/images/20230724024159.png?origin_url=image.png&pos_id=img-7AD8Ld1I-1721204799122) -->

<!-- ### Ocean Significant Wave Height Estimation with Spatio-temporally Aware Large Language Models -->

<p><strong>作者：</strong> 李哲， 徐榕荟， 胡吉林， 彭忠， 卢玺， 郭晨娟， 杨彬</p>

<p><strong>关键词：</strong> 海洋有效波高预测， 大语言模型， 提示微调</p>

<!-- **论文链接：** 

**代码链接：**  -->

<p><strong>摘要：</strong> 有效波高（SWH）是海洋科学中的一个重要指标，可以显著反应海洋波浪变化，对全海域SWH进行准确估算是至关重要的。传统数值模型在处理SWH估算任务中虽然具备成熟理论基础，但存在计算效率低下和难以进一步提高的问题。虽然，机器学习技术为解决上述问题提供新的可能性，但由于有限的观测技术和高昂的观测成本，实际观测到的海洋数据的严重稀缺，限制了机器学习模型的潜力。因此，我们提出了一个海洋SWH估算框架（Orca）。具体来说，Orca通过所设计的提示模板实现LLM在SWH估算任务上的迁移，使用一种新的时空感知编码模块增强了传统大语言模型（LLM）的时空推理能力。最终通过大量实验证明了Orca在SWH估算中取得了SOAT且高效的性能。</p>

<h2 id="1-引言">1. 引言</h2>
<p>有效波高（Significant Wave Height, SWH）是海洋科学中的一个重要指标，反映了海洋活动的状态。异常波浪会对人类社会和自然环境造成严重破坏，包括生产损失、人员伤亡和生态损害等。因此对海洋SWH的准确估算关系到各类海上活动的安全，如海上导航、渔业运输和海洋能源开发等。</p>

<p>目前SWH估算的方法主要分为两类：<strong>传统的数值模型</strong>方法和<strong>基于机器学习的方法</strong>。数值模型基于物理学理论构建，通过利用观测数据推演海洋波浪的所有变化实现对全海域SWH的估算。经过多年的研究积累，数值模型已经具备坚实的理论基础和准确性。但对海洋波浪变化的所有可能性的推演往往需要大量计算资源，且难以适应新的影响因素，模型性能过于依赖物理理论。因此，基于机器学习的方法已经成为一种很有前途的替代方法，在SWH估算中提供了更好的准确性和更少的计算时间。然而，同时也面临着两个主要的挑战：一方面，实际观测的SWH数据过于稀疏。由于观测技术、观测环境以及观测成本的限制，海洋中实际部署的观测浮标非常稀少，如图1显示了墨西哥湾浮标的分布。这种稀缺性阻碍了基于机器学习的方法的发展。另一方面，波浪的产生是不同方向多种力的相互作用，因此波的变化具有很强的时空相关性，但目前基于机器学习的方法未能捕捉到如此复杂的关系。</p>

<div align="center"><img src="assets/img/posts/20240801/f1.png" width="400px" /></div>
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图1：墨西哥湾的浮标分布。浮标所在的网格为红色的</center>

<p>为了解决上述两个挑战，我们提出了一个海洋SWH估算框架——Orca。具体来说，首先，由于大型语言模型（Large Language Model, LLM）在不同领域小样本场景下展现出了强大的泛化能力，我们以LLM作为模型主干，通过特定的提示模板和嵌入模块实现LLM的迁移，解决SWH估算中的数据稀疏性问题。其次，为了增强LLM的时空推理能力，我们将基于浮标的数据分割成重叠的补丁，通过一种新的时空编码模块捕捉海洋波浪的时空信息。同时，我们通过正则化项增加数值模型的物理知识对模型估算的约束。Orca整合了数值模型和机器学习模型的优点，弥补了LLM时空推理能力的不足，为海洋SWH估算提供新的方向。</p>

<p>综上所述，我们在本文中做出以下贡献：</p>
<ul>
  <li>Orca是第一个将LLM引入海洋SWH估算的模型。</li>
  <li>我们设计了一个特定的提示模板和提示嵌入模块，通过有限数据对LLM进行微调，解决了数据稀疏问题。</li>
  <li>我们提出了一种新的时空感知编码模块，补足了LLM的时空推理能力。</li>
  <li>进行了大量的实验，证明了Orca的计算效率和准确性。</li>
</ul>

<h2 id="2-定义">2. 定义</h2>
<ul>
  <li>
    <p><em>有效波高（SWH）：</em> 在给定区域的一组波中，最高1/3波浪的平均高度。</p>
  </li>
  <li>
    <p><em>基于浮标的数据：</em> $M$个固定在不同位置的浮标在$T$个连续时间间隔中收集到的$F$种观测变量序列，记作$\mathbf{X} \in \mathbb{R}^{F \times M \times T}$。</p>
  </li>
  <li>
    <p><em>基于网格的有效波高（GSWH）：</em> $T$个连续时间间隔内每个网格区域内的平均SWH，记作$\mathbf{Y}\in \mathbb{R}^{K \times J \times T}$，其中$K$和$J$分别表示行数和列数。</p>
  </li>
  <li>
    <p><strong>问题定义</strong> 给定在$T$个连续时间间隔的基于浮标的数据X，估算对应时间的GSWH值$Y$。</p>
  </li>
</ul>

<h2 id="3-方法">3. 方法</h2>
<p>图2给出了Orca的总体架构。模型一共包含三个模块：提示编码模块、时空感知编码模块、大语言模型。具体来说，设计提示模板，描述大语言模型扮演角色、任务目标、数据格式等信息，为大语言模型在此任务上的微调进行精确的方向定位；将一定时间段的浮标数据作为输入，通过时空感知编码模块学习浮标数据的时空表征；而对于大语言模型本身，冻结包含了大量预训练知识的前馈层和注意力机制模块的参数，只对输入表征的位置编码层的参数进行训练，通过线性层将大语言模型最后的隐藏层的输出映射为预测目标。</p>
<div align="center"><img src="assets/img/posts/20240801/f2.png" /></div>
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图2：Orca总体架构</center>

<h3 id="31-提示编码模块">3.1 提示编码模块</h3>
<p>为了指导LLM准确地理解数据，我们将提示符分割成五个不同的组件，如图2所示：ACTOR指定LLM的角色；INFORMATION定义输入数据的维度；TARGET明确说明任务目标；FEATURES指定输入数据的特征，如风向（WDIR）；DATA声明输入数据的类型，确保LLM准确地解释数值，而不是将它们误认为字符串。</p>

<p>使用LLM的词嵌入层对输入的结构化提示 $P={p_1, p_2, \ldots, p_E}$ 进行编码，得到 $\mathbf{P}={\mathbf{p}_1, \mathbf{p}_2, \ldots, \mathbf{p}_E}$ 。同时，随机生成固定数量的软提示 $Q={q_1, q_2, \ldots, q_R}$ ，并使用预训练的词嵌入层对其进行编码得到 $\mathbf{Q}={\mathbf{q}_1, \mathbf{q}_2, \ldots, \mathbf{q}_R}$ ，然后输入到一个可训练的提示编码器中，来建模不同嵌入之间的依赖关系：</p>
<div align="center"><img src="assets/img/posts/20240801/f3.png" width="400px" /></div>

<p>最后，我们将
$\mathbf{H}<em>q$
和
$\mathbf{P}$
拼接起来，以提高提示对样本的适应性，得到最终的提示
$\mathbf{H}</em>{prompt}=[\mathbf{H}_q; \mathbf{P}] \in\mathbb{R}^{(R+E)\times D}$。</p>

<h3 id="32-时空感知编码模块">3.2 时空感知编码模块</h3>
<p><strong>空间编码</strong> 我们把指定的矩形海域划分为二维网格，将浮标分配到相应的网格位置，记为$\mathbf{G}={(\mathrm{u}<em>i, \mathrm{v}_i)}</em>{i=1}^\mathrm{M}$。为了有效地表示多维空间内的空间关系，我们使用z阶曲线将浮标坐标映射到一维二进制嵌入：</p>
<div align="center"><img src="assets/img/posts/20240801/eq2.png" width="130px" /></div>

<p>随后，将$\mathbf{Z}$输入到一个全连接层，生成浮标的空间位置嵌入：</p>
<div align="center"><img src="assets/img/posts/20240801/eq3.png" width="200px" /></div>

<p><strong>时间编码</strong> 将浮标的观测数据 $\mathbf{X}$ 分割为重叠的补丁 $\mathbf{C}={\mathbf{X}<em>{(i)}}</em>{i=1}^{S}$ ，利用一个全连接层对齐 $\mathbf{C}$ 与LLM的语义空间，表述为：</p>
<div align="center"><img src="assets/img/posts/20240801/eq4.png" width="200px" /></div>

<p>我们将上述的三类表征拼接起来，获得最终的输入表征$\mathbf{H}<em>{input}=[\mathbf{H}</em>{prompt}; \mathbf{H}<em>{loc}; \mathbf{H}</em>{temp}] \in\mathbb{R}^\mathrm{ I \times F \times M \times D}$</p>

<h3 id="33-llm微调">3.3 LLM微调</h3>
<p>为了利用LLM在预训练中所学到的知识，我们只微调LLM的位置编码而冻结其他参数。将$\mathbf{H}_{input}$输入LLM，LLM最后一个隐藏层的输出为：</p>
<div align="center">&lt;img src="assets/img/posts/20240801/eq5.png" width=200px</div>

<p>我们在$\mathbf{H}_{LLM}$上执行平均池化来聚合特征维度：</p>
<div align="center"><img src="assets/img/posts/20240801/eq6.png" width="200px" /></div>

<p>将$\mathbf{H}_{pool}$展平为一个($I \times M \times D$)维嵌入，然后利用一个全连接层和一个重塑函数来得到估算的GSWH值：</p>
<div align="center"><img src="assets/img/posts/20240801/eq7.png" width="200px" /></div>

<h3 id="34-优化">3.4 优化</h3>
<p>我们最小化从浮标观测到的SWH值和估算的GSWH值之间的差异。在形式上，损失函数为：</p>
<div align="center"><img src="assets/img/posts/20240801/eq8.png" width="200px" /></div>
<p>为了指导模型遵循物理原理，我们利用来自数值模型GWD的数据作为一个正则化项：</p>
<div align="center"><img src="assets/img/posts/20240801/eq9.png" width="200px" /></div>
<p>最后，优化目标表示为：</p>
<div align="center"><img src="assets/img/posts/20240801/eq10.png" width="130px" /></div>

<h2 id="4-实验">4. 实验</h2>
<h3 id="41-实验设置">4.1 实验设置</h3>
<p><strong>数据集：</strong></p>
<ul>
  <li>NDBC（National Data Buoy Center）浮标数据集：来自美国国家数据中心的浮标实际观测数据，提供观测的时间、风速、风向、气温、海表温度、有效波高等信息。本文主要选取墨西哥海湾从（32°N, 98°W）到（18°N, 78°W）的矩形海域区间的现有可用的七个浮标在2018年2月份观测到的历史数据。</li>
  <li>全球波浪后播数据库（Global Wave Database, GWD）：这是我国河口海岸国家重点实验室2基于 4.18 版本的 WaveWatch III 波浪模型生成的数据进行创建的，提供了1985年至2016年间的全球波浪数据。该数据库所包含数据种类众多，包括有效波高、峰值周期、平均波方向、海面温差以及分解涌浪和风浪后的各种参数。</li>
</ul>

<p><strong>基线模型：</strong></p>
<ul>
  <li>GWD：数值模型。</li>
  <li>PatchTST：一种先进的时间序列模型。</li>
  <li>GPT-2：预训练的大语言模型。</li>
  <li>One fits All：在时间序列数据集上微调后的大语言模型。</li>
</ul>

<p><strong>评估指标：</strong></p>
<ul>
  <li>均方差（Mean Squared Error, MSE）</li>
  <li>均方根（Root Mean Square Error, RMSE）</li>
  <li>平均绝对误差（Mean Absolute Error, MAE）
    <h3 id="42-实验结果">4.2 实验结果</h3>
    <p>表1报告了Orca以及四个基线模型在NDBC数据集上的性能结果。</p>
  </li>
</ul>
<div align="center"><img src="assets/img/posts/20240801/t.png" width="400px" /></div>
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">表1：不同模型的性能比较。最佳表现用粗体突出显示</center>

<p>图3报告了Orca在删除不同模块组件后模型变体的性能结果。</p>
<div align="center"><img src="assets/img/posts/20240801/f3.png" width="400px" /></div>
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图3：不同模型变体的性能比较</center>

<p>图4报告了所有基线模型在浮标42040上估算出的连续8个时间间隔的SWH。</p>
<div align="center"><img src="assets/img/posts/20240801/f4.png" width="400px" />&lt;/ditv&gt;
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图4：浮标42040连续8个时间间隔的SWH</center>

图5(a)，(b)分别显示了Orca以及数值模型GWD在某一时刻对墨西哥海湾全部网格GSHW估算的热图。
<div align="center"><img src="assets/img/posts/20240801/f5.png" /></div>
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图5：目标海域在固定时刻GSWH分布的热图。颜色越深，GSWH的值就越大</center>

<div align="left">

此外，传统的SWH估算模型的时间效率明显较低，在一个高性能的64核计算机上估算一天的SWH大约需要4分钟。相比之下，Orca显示了显著的计算效率，对短期（1天）仅需0.0095秒。即使是对中期（8天）和长期（28天）的，Orca也保持了这种效率，分别只需要5.5527秒和27.3071秒。


## 5. 总结
本文提出了一种在有限数据情况下解决海洋有效波高（SWH）估算问题的方法。首先，我们引入LLM作为模型主干，充分利用其小样本学习能力。其次，我们设计了一个特定的提示模板和嵌入模块，使LLM适应SWH估算任务。然后，我们将基于浮标的数据分割成重叠的时间补丁，并采用一种新的空间编码捕捉时空信息。通过大量的实验结果证实了我们提出的模型Orca的有效性和高效性。在未来，我们的目标是进一步提高Orca的效率，实现SWH在未来时刻的单步和多步预测。
</div></div>]]></content><author><name>李哲， 徐榕荟， 胡吉林， 彭忠， 卢玺， 郭晨娟， 杨彬</name></author><category term="opinion" /><category term="LLM" /><category term="Ocean" /><category term="Wave Height" /><category term="Deep Learning" /><summary type="html"><![CDATA[时空感知的大语言模型在海洋显著波高估计中的应用]]></summary></entry></feed>